{"version":3,"sources":["stopwatch/utils/timeFormat.js","stopwatch/components/Timer.js","stopwatch/components/Controls.js","stopwatch/components/LapTime.js","stopwatch/components/LapTimeList.js","stopwatch/constants/Config.js","stopwatch/utils/angles.js","stopwatch/components/Notch.js","stopwatch/components/SecondHand.js","stopwatch/components/ClockFace.js","stopwatch/components/Stopwatch.js","App.js","serviceWorker.js","index.js"],"names":["zeroPad","number","size","s","String","length","timeFormat","milliseconds","remaining","hh","parseInt","mm","ss","S","Timer","time","this","props","className","Component","proptTypes","PropTypes","defaultProps","Controls","isRunning","start","stop","reset","addLapTime","onClick","bool","func","isRequired","LapTime","lap","LapTimeList","timeList","transitionName","transitionEnterTimeout","transitionLeaveTimeout","map","index","key","array","getAngle","second","Math","PI","positionNotch","radius","elemWidth","angle","height","width","transform","cos","sin","Notch","style","NotchNumber","secondHandPosition","SecondHand","ClockFace","notches","i","push","renderNotches","Stopwatch","state","timerRef","extraTime","setState","setInterval","updateTimer","Config","clearInterval","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30ce0c4f.chunk.js","sourcesContent":["function zeroPad(number, size = 2) {\n    let s = String(number);\n    while (s.length < size) { s = '0' + s; }\n    return s;\n}\n\nexport default function timeFormat (milliseconds) {\n    let remaining = milliseconds / 1000;\n    const hh = parseInt (remaining / 3600, 10);\n    remaining %= 3600;\n    const mm = parseInt(remaining/60, 10);\n    const ss = parseInt(remaining % 60, 10)\n    const S  = parseInt( (milliseconds % 1000) / 100, 10 );\n    return `${ zeroPad( hh ) }:${ zeroPad( mm ) }:${ zeroPad( ss ) }.${ zeroPad( S ) }`;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Timer.css';\n\nimport timeFormat from '../utils/timeFormat';\n\nclass Timer extends Component {\n\n  static proptTypes = {\n    time : PropTypes.number\n  };\n\n  static defaultProps = {\n    time : 0\n  };\n\n  render() {\n    const { time } = this.props;\n\n    return (\n      <div className=\"Timer\">\n        { timeFormat( time ) }\n      </div>\n    );\n  }\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Controls.css';\n\nclass Controls extends Component {\n\n  static proptTypes = {\n      isRunning  : PropTypes.bool,\n      start      : PropTypes.func.isRequired,\n      stop       : PropTypes.func.isRequired,\n      reset      : PropTypes.func.isRequired,\n      addLapTime : PropTypes.func.isRequired \n  };\n\n  static defaultProps = {\n    isRunning : false\n  };\n\n  render() {\n    const { isRunning, start, stop, reset, addLapTime } = this.props;\n\n    return (\n      <div className=\"Controls\">\n        { isRunning ? \n            <button onClick={ stop } className=\"Controls__button\" > STOP </button> :\n            <button onClick={ start } className=\"Controls__button\"> START </button>\n        }\n\n        { isRunning ? \n            <button onClick={ addLapTime } className=\"Controls__button\" > LAP </button> :\n            <button onClick={ reset } className=\"Controls__button\" > RESET </button>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Controls;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './LapTime.css';\n\nimport timeFormat from '../utils/timeFormat';\n\nclass LapTime extends Component {\n\n  static proptTypes = {\n    lap  : PropTypes.number,\n    time : PropTypes.number\n  };\n\n  static defaultProps = {\n    lap  : 0,\n    time : 0\n  };\n\n  render() {\n\n    const { lap, time } = this.props;\n\n    return (\n      <div className=\"LapTime\">\n        <span className=\"LapTime__lap\" >{ lap }</span>\n        <span className=\"LapTime__time\" >{ timeFormat( time ) }</span>\n      </div>\n    );\n  }\n}\n\nexport default LapTime;","import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport './LapTimeList.css';\n\nimport LapTime from './LapTime';\n\nclass LapTimeList extends Component {\n\n  static proptTypes = {\n    timeList : PropTypes.array\n  };\n\n  static defaultProps = {\n    timeList : []\n  };\n\n  render() {\n        const { timeList } = this.props;\n    \n        return (\n          <div className=\"LapTimeList\">\n            <div className=\"LapTimeList__listwrap\">\n              {\n                timeList.length ? \n                <div className=\"LapTimeList__headers\">\n                    <span> LAP </span> <span> TIME </span>\n                </div> :\n                <span></span>\n              }\n              <ul className=\"LapTimeList__list\" > \n                <CSSTransitionGroup\n                transitionName=\"slideLap\"\n                transitionEnterTimeout={300}\n                transitionLeaveTimeout={5}>\n                  {\n                    timeList.map( (time, index) => {\n                      return (\n                        <li key={ index }>\n                          <LapTime lap={ index + 1 } time={ time }  />\n                        </li>\n                      )\n                    })\n                  }\n                </CSSTransitionGroup>\n              </ul>\n            </div>\n          </div>\n        );\n      }\n    }\n    \n    export default LapTimeList;","export default {\n    updateInterval : 100 // Our timer will be updated every 100 miliseconds\n  }","export default function getAngle(second) {\n    return (second/60) * 2 * Math.PI;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Notch.css';\n\nimport getAngle from '../utils/angles';\n\nfunction positionNotch(second, radius, elemWidth) {\n    let angle = getAngle(second);\n    return {\n        // y = R - R(sin(pi/2 - theta))\n        // x = R + R(cos(pi/2 - theta))\n        height: second % 5 === 0 ? 15 : 10,\n        width: second % 5 === 0 ? 2 : 1,\n        transform: `translate(${150 - elemWidth /2 + radius*(Math.cos(Math.PI/2 - angle))}px, \n                    ${150 - radius*(Math.sin(Math.PI/2 - angle))}px) \n                    rotate(${angle}rad)`\n    }\n}\n\nfunction NotchNumber(second) {\n    if (second % 5 === 0) {\n        return <div className=\"Notch__number\" style={positionNotch(second, 130, 20)}>{second}</div>\n    }\n}\n\nclass Notch extends Component {\n\n  static proptTypes = {\n    second : PropTypes.number.isRequired\n  };\n\n  render() {\n    const { second } = this.props;\n    return (\n      <div className=\"Notch\">\n          <div className=\"Notch__line\" style={positionNotch(second, 150, 2)}></div>\n          { NotchNumber(second) }\n      </div>\n    );\n  }\n}\n\nexport default Notch;","import React, { Component } from 'react';\nimport './SecondHand.css'\nimport getAngle from '../utils/angles';\n\nfunction secondHandPosition(time) {\n    return {\n        transform: `translate(148px, 40px) rotate(${getAngle(time/1000)}rad)`\n    }\n}\n\nclass SecondHand extends Component {\n    render() {\n        const { time } = this.props;\n        return (\n            <div className=\"SecondHand\">\n                <div className=\"SecondHand__line\"  style={secondHandPosition(time)}></div>\n            </div>\n            \n        );\n    }\n}\nexport default SecondHand;","import React, { Component } from 'react';\nimport './ClockFace.css';\nimport Notch from './Notch';\nimport SecondHand from './SecondHand';\n\nfunction renderNotches() {\n  var notches = [];\n  for (let i=1; i<=60; i++) {\n    notches.push(<Notch key={i} second={i}/>)\n  }\n  return notches\n};\n\nclass ClockFace extends Component {\n\n  render() {\n    const { time } = this.props;\n    const notches = renderNotches();\n    return (\n      <div className=\"ClockFace\">\n        <SecondHand time={time}></SecondHand>\n        { notches }\n      </div>\n    );\n  }\n}\n\nexport default ClockFace;","import React, { Component } from 'react';\nimport './Stopwatch.css';\n\nimport Timer from './Timer';\nimport Controls from './Controls';\nimport LapTimeList from './LapTimeList';\n\nimport Config from '../constants/Config';\nimport ClockFace from './ClockFace';\n\nfunction getDefaultState() {\n  return {\n    isRunning : false,\n    time      : 0,\n    timeList  : []    \n  }\n}\n\nclass Stopwatch extends Component {\n\n    constructor( props ) {\n      super(props);\n      this.state    = getDefaultState();\n      this.timerRef = null;\n    }\n\n    updateTimer(extraTime) {\n        const { time } = this.state;\n        this.setState({ time : time + extraTime });\n    }\n\n    start() {\n        this.setState({\n          isRunning : true \n        }, () => {\n          this.timerRef = setInterval(\n            () => { this.updateTimer( Config.updateInterval ) }, Config.updateInterval\n          )\n        });\n    }\n\n    stop() {\n        this.setState({\n          isRunning : false \n        }, () => {\n          clearInterval(this.timerRef);\n        });\n    }\n\n    reset() {\n        this.setState(getDefaultState());\n    }\n    \n    addLapTime() {\n        const { time, timeList } = this.state;\n    \n        this.setState({\n          timeList : [ ...timeList, time ] \n        });\n    }\n\n    render() {\n\n        const { isRunning, time, timeList } = this.state;\n    \n        return (\n            <div className=\"Stopwatch\">\n            <h2 className=\"Stopwatch__title\">STOPWATCH</h2>\n            <ClockFace time={ time }/>\n            <Timer time={ time } />\n    \n            <Controls\n              isRunning={ isRunning } \n              start={ () => this.start() }\n              stop={ () => this.stop() }\n              reset={ () => this.reset() }\n              addLapTime={ () => this.addLapTime() }\n            />\n    \n            <LapTimeList timeList={ timeList } />\n\n          </div>\n        );\n      }\n    }\n    \n    export default Stopwatch;","import React, { Component } from \"react\";\nimport Stopwatch from \"./stopwatch/components/Stopwatch\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Stopwatch />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}